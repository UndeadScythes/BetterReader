<project xmlns="http://maven.apache.org/POM/4.0.0"
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.undeadscythes</groupId>
  <artifactId>BetterReader</artifactId>
  <version>1.0.2</version>
  <name>BetterReader</name>
  <url>https://github.com/UndeadScythes/BetterReader</url>
  <description>Born from my own obsessive compulsive need for tidy code comes
BetterReader. A wrapper class for BufferedReaders that offers a nice way to
access data within loops. No more headaches over the following code:
```java
while ((String line = reader.readLine()) != null) {
    // Do something
}

while (true) {
    String line = reader.readLine();
    if (line == null) break;
    // Do something
}

for (String line = reader.readLine(); line != null; line = reader.readLine()) {
    // Do something
}

String line = reader.readLine();
while (line != null) {
    // Do something
    line = reader.readLine();
}
```
Now we can use BetterReader to tidy up our code:
```java
while (reader.hasNext()) {
    line = reader.getLine();
    // Do something
}
```
</description>
  <licenses>
    <license>
      <name>Creative Commons BY-NC-SA 2.0 UK</name>
      <url>http://creativecommons.org/licenses/by-nc-sa/2.0/uk/legalcode</url>
      <distribution>repo</distribution>
      <comments>Attribution - Non-Commercial - Share-Alike</comments>
    </license>
  </licenses>
  <prerequisites>
    <maven>2.2.1</maven>
  </prerequisites>
  <packaging>jar</packaging>
  <properties>
    <maven.build.timestamp.format>yyyy-MM-dd</maven.build.timestamp.format>
    <dev.build.timestamp>${maven.build.timestamp}</dev.build.timestamp>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
	<version>2.6</version>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-javadoc-plugin</artifactId>
	<version>2.9.1</version>
	<executions>
	  <execution>
	    <phase>generate-sources</phase>
	    <goals>
	      <goal>javadoc</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>versions-maven-plugin</artifactId>
	<version>2.1</version>
	<executions>
	  <execution>
	    <phase>install</phase>
	    <goals>
	      <goal>display-plugin-updates</goal>
	      <goal>display-dependency-updates</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>
    </plugins>
  </build>
</project>
